{"version":3,"sources":["webpack:///src/app/reg/reg.page.html","webpack:///src/app/reg/reg-routing.module.ts","webpack:///src/app/reg/reg.module.ts","webpack:///src/app/reg/reg.page.scss","webpack:///src/app/reg/reg.page.ts"],"names":["routes","path","component","RegPageRoutingModule","imports","forChild","exports","RegPageModule","declarations","RegPage","auth","router","route","alertController","form","email","required","password","minLength","queryParams","subscribe","params","console","log","aSub","unsubscribe","disable","register","value","navigate","error","presentAlert","enable","create","cssClass","header","subHeader","message","buttons","alert","present","selector","template"],"mappings":"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","file":"reg-reg-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Регистрация</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <form\\n      class=\\\"card\\\"\\n      [formGroup]=\\\"form\\\"\\n      (ngSubmit)=\\\"onSubmit()\\\"\\n    >\\n    <div class=\\\"card-content\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>CRM</ion-card-subtitle>\\n        <ion-card-title>Заполните поля для регистрации</ion-card-title>\\n      </ion-card-header>\\n      <div class=\\\"input-field\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">E-mail</ion-label>\\n          <ion-input\\n            formControlName=\\\"email\\\"\\n            id=\\\"email\\\"\\n            type=\\\"email\\\">\\n          </ion-input>\\n        </ion-item>\\n        <span\\n          class=\\\"helper-text red-text\\\"\\n          *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\"\\n        >\\n          <span *ngIf=\\\"form.get('email').errors['required']\\\">Email не должен быть пустым</span>\\n          <span *ngIf=\\\"form.get('email').errors['email']\\\">Введите корректный email адрес</span>\\n        </span>\\n      </div>\\n      <div class=\\\"input-field\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Пароль</ion-label>\\n          <ion-input\\n            formControlName=\\\"password\\\"\\n            type=\\\"password\\\">\\n          </ion-input>\\n        </ion-item>\\n        <span\\n          class=\\\"helper-text red-text\\\"\\n          *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\"\\n        >\\n          <span *ngIf=\\\"form.get('password').errors['required']\\\">Пароль не должен быть пустым</span>\\n          <span *ngIf=\\\"form.get('password').errors['minlength'] && form.get('password').errors['minlength']['requiredLength']\\\">\\n            Пароль должен быть больше {{form.get('password').errors['minlength']['requiredLength']}} символов.\\n            Сейчас {{form.get('password').errors['minlength']['actualLength']}}\\n          </span>\\n        </span>\\n      </div>\\n    </div>\\n    <div class=\\\"card-action\\\">\\n      <ion-button\\n        type=\\\"submit\\\"\\n        class=\\\"ion-margin\\\"\\n        [disabled]=\\\"form.invalid || form.disabled\\\"\\n      >\\n        Зарегистрироваться\\n      </ion-button>\\n    </div>\\n  </form>\\n  </ion-card>\\n   <ion-button\\n        type=\\\"submit\\\"\\n        class=\\\"ion-margin\\\"\\n        routerLink=\\\"/login\\\"\\n        expand=\\\"block\\\"\\n        color=\\\"dark\\\"\\n  >\\n        Авторизация\\n  </ion-button>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegPage } from './reg.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegPageRoutingModule } from './reg-routing.module';\n\nimport { RegPage } from './reg.page';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegPageRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegPage]\n})\nexport class RegPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZy9yZWcucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-reg',\n  templateUrl: './reg.page.html',\n  styleUrls: ['./reg.page.scss'],\n})\nexport class RegPage implements OnInit {\n  form: FormGroup\n  aSub: Subscription\n\n  constructor(private auth: AuthService,\n              private router: Router,\n              private route: ActivatedRoute,\n              public alertController: AlertController) {\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)])\n    })\n\n    this.route.queryParams.subscribe((params: Params) => {\n      if (params['registered']) {\n        console.log('Теперь вы можете зайти в систему используя свои данные')\n      } else if (params['accessDenied']) {\n        console.log('Для начала авторизуйтесь в системе')\n      }\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n  }\n\n  onSubmit() {\n    this.form.disable()\n\n    this.aSub = this.auth.register(this.form.value).subscribe(\n      () => this.router.navigate(['/login']),\n      error => {\n        this.presentAlert()\n        this.form.enable()\n      }\n    )\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Ошибка',\n      subHeader: '',\n      message: 'Неверный логин или пароль.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n}\n"]}