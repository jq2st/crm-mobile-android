{"version":3,"sources":["webpack:///src/app/categories/category/category.page.html","webpack:///src/app/categories/category/positons/positons.component.html","webpack:///src/app/categories/category/category-routing.module.ts","webpack:///src/app/categories/category/category.module.ts","webpack:///src/app/categories/category/category.page.scss","webpack:///src/app/categories/category/category.page.ts","webpack:///src/app/categories/category/positons/positons.component.scss","webpack:///src/app/categories/category/positons/positons.component.ts","webpack:///src/app/shared/services/positions.service.ts"],"names":["routes","path","component","CategoryPageRoutingModule","imports","forChild","exports","CategoryPageModule","declarations","CategoryPage","route","categoriesService","router","isNew","imagePreview","form","name","required","disable","params","pipe","getById","subscribe","category","patchValue","imageSrc","console","log","enable","error","message","inputRef","nativeElement","click","event","file","target","files","image","reader","FileReader","onload","result","readAsDataURL","desigion","window","confirm","_id","response","navigate","obs$","create","value","update","selector","template","PositonsComponent","positionService","positions","loading","positonId","fetch","categoryId","cost","min","position","reset","newPosition","complited","pos","ind","findIndex","p","push","stopPropagation","indx","splice","PositionService","http","basea","get","post","patch","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCMAI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAX9B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,EAKP,0DALO,EAMP,kEANO,CADD;AASRI,oBAAY,EAAE,CAAC,2DAAD,EAAe,8EAAf;AATN,OAAT,CAW8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACtBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFE,YAAY;AAYvB,8BAAoBC,KAApB,EACUC,iBADV,EAEUC,MAFV,EAE0B;AAAA;;AAFN,eAAAF,KAAA,GAAAA,KAAA;AACV,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAXV,eAAAC,KAAA,GAAQ,IAAR;AAIA,eAAAC,YAAA,GAAa,EAAb;AAO6B;;AAdN;AAAA;AAAA,qCAiBZ;AAAA;;AAET,iBAAKC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBC,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWC,QAAjC;AADkB,aAAd,CAAZ;AAIA,iBAAKF,IAAL,CAAUG,OAAV;AAEA,iBAAKR,KAAL,CAAWS,MAAX,CACGC,IADH,CAEI,iEACE,UAACD,MAAD,EAAoB;AAClB,kBAAIA,MAAM,CAAC,IAAD,CAAV,EAAkB;AAChB,qBAAI,CAACN,KAAL,GAAa,KAAb;AACA,uBAAO,KAAI,CAACF,iBAAL,CAAuBU,OAAvB,CAA+BF,MAAM,CAAC,IAAD,CAArC,CAAP;AACD;;AAED,qBAAO,gDAAG,IAAH,CAAP;AACD,aARH,CAFJ,EAaGG,SAbH,CAcI,UAACC,QAAD,EAAwB;AACtB,kBAAIA,QAAJ,EAAc;AACZ,qBAAI,CAACA,QAAL,GAAgBA,QAAhB;;AACA,qBAAI,CAACR,IAAL,CAAUS,UAAV,CAAqB;AACnBR,sBAAI,EAAEO,QAAQ,CAACP;AADI,iBAArB;;AAGA,qBAAI,CAACF,YAAL,GAAoBS,QAAQ,CAACE,QAA7B;AACAC,uBAAO,CAACC,GAAR,CAAY,KAAI,CAACb,YAAL,GAAmB,MAA/B;AACAY,uBAAO,CAACC,GAAR,CAAY,KAAI,CAACJ,QAAL,CAAcE,QAAd,GAAyB,KAArC;AACD;;AACD,mBAAI,CAACV,IAAL,CAAUa,MAAV;AACD,aAzBL,EA0BI,UAAAC,KAAK;AAAA,qBAAGH,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACA,KAAN,CAAYC,OAAxB,CAAH;AAAA,aA1BT;AA4BD;AArDsB;AAAA;AAAA,yCAwDR;AACb,iBAAKC,QAAL,CAAcC,aAAd,CAA4BC,KAA5B;AACD;AA1DsB;AAAA;AAAA,uCA4DVC,KA5DU,EA4DE;AAAA;;AACvB,gBAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,iBAAKC,KAAL,GAAaH,IAAb;AAEA,gBAAMI,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,kBAAM,CAACE,MAAP,GAAgB,YAAM;AACpB,oBAAI,CAAC3B,YAAL,GAAoByB,MAAM,CAACG,MAA3B;AACD,aAFD;;AAGAH,kBAAM,CAACI,aAAP,CAAqBR,IAArB;AACD;AArEsB;AAAA;AAAA,2CAuEN;AAAA;;AACf,gBAAMS,QAAQ,GAAGC,MAAM,CAACC,OAAP,8NAA2D,KAAKvB,QAAL,CAAcP,IAAzE,EAAjB;;AACA,gBAAI4B,QAAJ,EAAc;AACZ,mBAAKjC,iBAAL,WAA8B,KAAKY,QAAL,CAAcwB,GAA5C,EAAiDzB,SAAjD,CACE,UAAA0B,QAAQ,EAAI;AAAEtB,uBAAO,CAACC,GAAR,CAAYqB,QAAQ,CAAClB,OAArB;AAA+B,eAD/C,EAEE,UAAAD,KAAK,EAAI;AAAEH,uBAAO,CAACC,GAAR,CAAYE,KAAK,CAACA,KAAN,CAAYC,OAAxB;AAAkC,eAF/C,EAGE;AAAA,uBAAM,MAAI,CAAClB,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,aAAD,CAArB,CAAN;AAAA,eAHF;AAKD;AACF;AAhFsB;AAAA;AAAA,qCAkFZ;AAAA;;AACT,gBAAIC,IAAJ;AACDxB,mBAAO,CAACC,GAAR,CAAY,KAAKW,KAAjB;AACC,iBAAKvB,IAAL,CAAUG,OAAV;;AACA,gBAAI,KAAKL,KAAT,EAAgB;AACd;AACAqC,kBAAI,GAAG,KAAKvC,iBAAL,CAAuBwC,MAAvB,CAA8B,KAAKpC,IAAL,CAAUqC,KAAV,CAAgBpC,IAA9C,EAAoD,KAAKsB,KAAzD,CAAP;AAED,aAJD,MAIO;AACLY,kBAAI,GAAG,KAAKvC,iBAAL,CAAuB0C,MAAvB,CAA8B,KAAK9B,QAAL,CAAcwB,GAA5C,EAAiD,KAAKhC,IAAL,CAAUqC,KAAV,CAAgBpC,IAAjE,EAAuE,KAAKsB,KAA5E,CAAP;AACD;;AAEDY,gBAAI,CAAC5B,SAAL,CACE,UAAAC,QAAQ,EAAI;AACV,oBAAI,CAACA,QAAL,GAAgBA,QAAhB;AACAG,qBAAO,CAACC,GAAR,CAAY,qBAAZ;;AACA,oBAAI,CAACZ,IAAL,CAAUa,MAAV;AACD,aALH,EAME,UAAAC,KAAK,EAAI;AACPH,qBAAO,CAACC,GAAR,CAAYE,KAAK,CAACA,KAAN,CAAYC,OAAxB;;AACA,oBAAI,CAACf,IAAL,CAAUa,MAAV;AACD,aATH;AAWD;AAzGsB;;AAAA;AAAA,S;;;;gBAXhB;;gBAIA;;gBAJwB;;;;;;gBAY9B,uD;AAAS,iBAAC,OAAD,EAAU;AAAE,sBAAQ;AAAV,WAAV;;;AADCnB,kBAAY,6DALxB,gEAAU;AACT6C,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,6GAFS;;;;AAAA,OAAV,CAKwB,GAAZ9C,YAAY,CAAZ;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUF+C,iBAAiB;AAU5B,mCAAoBC,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AALpB,eAAAC,SAAA,GAAwB,EAAxB;AACA,eAAAC,OAAA,GAAU,KAAV;AAEA,eAAAC,SAAA,GAAY,IAAZ;AAEyD;;AAV7B;AAAA;AAAA,qCAYjB;AAAA;;AACT,iBAAKD,OAAL,GAAe,IAAf;AACA,iBAAKF,eAAL,CAAqBI,KAArB,CAA2B,KAAKC,UAAhC,EAA4CxC,SAA5C,CACE,UAAAoC,SAAS,EAAI;AACX,oBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACA,oBAAI,CAACC,OAAL,GAAe,KAAf;AACD,aAJH;AAOA,iBAAK5C,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBC,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,QAA/B,CADkB;AAExB8C,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,CAAhB,EAAmB,CAAC,0DAAW9C,QAAZ,EAAsB,0DAAW+C,GAAX,CAAe,CAAf,CAAtB,CAAnB;AAFkB,aAAd,CAAZ;AAID;AAzB2B;AAAA;AAAA,wCA2Bd,CAEb;AA7B2B;AAAA;AAAA,4CA+BV,CAEjB;AAjC2B;AAAA;AAAA,2CAmCXC,QAnCW,EAmCS;AACnC,iBAAKL,SAAL,GAAiBK,QAAQ,CAAClB,GAA1B;AACA,iBAAKhC,IAAL,CAAUS,UAAV,CAAqB;AACnBR,kBAAI,EAAEiD,QAAQ,CAACjD,IADI;AAEnB+C,kBAAI,EAAEE,QAAQ,CAACF;AAFI,aAArB;AAID;AAzC2B;AAAA;AAAA,0CA2CZ;AACd,iBAAKH,SAAL,GAAiB,IAAjB;AACA,iBAAK7C,IAAL,CAAUmD,KAAV,CAAgB;AACdlD,kBAAI,EAAE,IADQ;AAEd+C,kBAAI,EAAE;AAFQ,aAAhB;AAID;AAjD2B;AAAA;AAAA,qCAoDjB,CACV;AArD2B;AAAA;AAAA,qCAuDjB;AAAA;;AACT,iBAAKhD,IAAL,CAAUG,OAAV;AAEA,gBAAMiD,WAAW,GAAa;AAC5BnD,kBAAI,EAAE,KAAKD,IAAL,CAAUqC,KAAV,CAAgBpC,IADM;AAE5B+C,kBAAI,EAAE,KAAKhD,IAAL,CAAUqC,KAAV,CAAgBW,IAFM;AAG5BxC,sBAAQ,EAAE,KAAKuC;AAHa,aAA9B;;AAMA,gBAAMM,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,oBAAI,CAACrD,IAAL,CAAUmD,KAAV,CAAgB;AAAElD,oBAAI,EAAE,EAAR;AAAY+C,oBAAI,EAAE;AAAlB,eAAhB;;AACA,oBAAI,CAAChD,IAAL,CAAUa,MAAV;AACD,aAHD;;AAKA,gBAAI,KAAKgC,SAAT,EAAoB;AAClBO,yBAAW,CAACpB,GAAZ,GAAkB,KAAKa,SAAvB;AACA,mBAAKH,eAAL,CAAqBJ,MAArB,CAA4Bc,WAA5B,EAAyC7C,SAAzC,CACE,UAAA+C,GAAG,EAAI;AACL,oBAAMC,GAAG,GAAG,MAAI,CAACZ,SAAL,CAAea,SAAf,CAAyB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACzB,GAAF,KAAUsB,GAAG,CAACtB,GAAlB;AAAA,iBAA1B,CAAZ;;AACA,sBAAI,CAACW,SAAL,CAAeY,GAAf,IAAsBD,GAAtB;AACD,eAJH,EAKE,UAAAxC,KAAK,EAAI,CACR,CANH,EAOE,YAAM;AAAEuC,yBAAS;AAAI,eAPvB;AASD,aAXD,MAaK;AACH,mBAAKX,eAAL,CAAqBN,MAArB,CAA4BgB,WAA5B,EAAyC7C,SAAzC,CACE,UAAA+C,GAAG,EAAI;AACL,sBAAI,CAACX,SAAL,CAAee,IAAf,CAAoBJ,GAApB;AACD,eAHH,EAIE,UAAAxC,KAAK,EAAI,CACR,CALH,EAME,YAAM;AAAEuC,yBAAS;AAAI,eANvB;AAQD;AAEF;AA7F2B;AAAA;AAAA,2CA+FXlC,KA/FW,EA+FE+B,QA/FF,EA+FsB;AAAA;;AAChD/B,iBAAK,CAACwC,eAAN;AACA,iBAAKjB,eAAL,WAA4BQ,QAA5B,EAAsC3C,SAAtC,CACE,UAAA0B,QAAQ,EAAI;AACV,kBAAM2B,IAAI,GAAG,MAAI,CAACjB,SAAL,CAAea,SAAf,CAAyB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACzB,GAAF,KAAUkB,QAAQ,CAAClB,GAAvB;AAAA,eAA1B,CAAb;;AACA,oBAAI,CAACW,SAAL,CAAekB,MAAf,CAAsBD,IAAtB,EAA4B,CAA5B;AACD,aAJH;AAMD;AAvG2B;;AAAA;AAAA,S;;;;gBAVrB;;;;;;gBAYN,mD;AAAK,iBAAC,YAAD;;;gBACL,uD;AAAS,iBAAC,OAAD,EAAU;AAAE,sBAAQ;AAAV,WAAV;;;AAHCnB,uBAAiB,6DAL7B,gEAAU;AACTF,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,2HAFS;;;;AAAA,OAAV,CAK6B,GAAjBC,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCAqB,eAAe;AAIxB,iCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFpB,eAAAC,KAAA,GAAQ,wCAAR;AAEyC;;AAJjB;AAAA;AAAA,gCAMlBjB,UANkB,EAMA;AACpB,mBAAO,KAAKgB,IAAL,CAAUE,GAAV,CAA0B,KAAKD,KAAL,2BAA8BjB,UAA9B,CAA1B,CAAP;AACH;AARuB;AAAA;AAAA,iCAUjBG,QAViB,EAUA;AACpB,mBAAO,KAAKa,IAAL,CAAUG,IAAV,CAAyB,KAAKF,KAAL,GAAa,eAAtC,EAAuDd,QAAvD,CAAP;AACH;AAZuB;AAAA;AAAA,iCAcjBA,QAdiB,EAcA;AACpB,mBAAO,KAAKa,IAAL,CAAUI,KAAV,CAA0B,KAAKH,KAAL,2BAA8Bd,QAAQ,CAAClB,GAAvC,CAA1B,EAAwEkB,QAAxE,CAAP;AACH;AAhBuB;AAAA;AAAA,kCAkBjBA,QAlBiB,EAkBA;AACpB,mBAAO,KAAKa,IAAL,WAA0B,KAAKC,KAAL,2BAA8Bd,QAAQ,CAAClB,GAAvC,CAA1B,CAAP;AACH;AApBuB;;AAAA;AAAA,S;;;;gBATnB;;;;AASI8B,qBAAe,6DAJ3B,iEAAW;AACRM,kBAAU,EAAE;AADJ,OAAX,CAI2B,GAAfN,eAAe,CAAf","file":"category-category-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-item>\\n      <ion-back-button></ion-back-button>\\n      <ion-title *ngIf=\\\"category\\\">{{category.name}}</ion-title>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"row\\\">\\n    <form class=\\\"col s12 l6\\\" [formGroup]=\\\"form\\\" (ngSubmit)='onSubmit()'>\\n      <div class=\\\"input-field\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Название</ion-label>\\n          <ion-input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{'invalid': form.get('name').invalid && form.get('name').touched}\\\"></ion-input>\\n        </ion-item>\\n        <span class=\\\"helper-text red-text\\\" *ngIf=\\\"form.get('name').invalid && form.get('name').touched\\\">\\n            <span *ngIf=\\\"form.get('name').hasError('required')\\\">Имя категории не может быть пустым</span>\\n        </span>\\n      </div>\\n  \\n      <!-- <div>\\n        <input type=\\\"file\\\" class=\\\"display-none\\\" #input (change)=\\\"onFileUpload($event)\\\">\\n        <button (click)=\\\"triggerClick()\\\" [disabled]=\\\"form.disabled\\\" class=\\\"waves-effect waves-light btn orange lighten-2 mb2\\\" type=\\\"button\\\">\\n          <i class=\\\"material-icons left\\\">backup</i>\\n          Загрузить изображение\\n        </button>\\n      </div> -->\\n      <div class=\\\"ion-margin\\\">\\n        <ion-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]='form.invalid || form.disabled'>\\n          <ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n          Сохранить изменения\\n        </ion-button>\\n        <ion-button color=\\\"danger\\\" (click)=\\\"deleteCategory()\\\" *ngIf=\\\"!isNew\\\">\\n          <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\n          Удалить\\n        </ion-button>\\n      </div>\\n  </form>\\n  \\n    <!-- <div class=\\\"col s12 l4 center\\\">\\n      <img class=\\\"responsive-img h200\\\" [src]='imagePreview' *ngIf=\\\"imagePreview\\\">\\n    </div> -->\\n  </div>\\n  \\n  <app-positons *ngIf=\\\"category?._id\\\" [categoryId]='category._id'></app-positons>\\n</ion-content>\\n\\n\\n  <!-- <div class=\\\"page-title\\\">\\n    <h4>\\n      <a [routerLink]=\\\"['/categories']\\\">Категории</a>\\n      <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\n      {{isNew ? 'Добавить': 'Редактировать'}} категорию\\n    </h4>\\n    <span>\\n     \\n    </span>\\n  </div> -->\\n\\n\\n\";","export default \"\\n    <ion-card class=\\\"modal\\\" #modal>\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)='onSubmit()'>\\n        <ion-card-header>\\n          <ion-card-title>Позиция</ion-card-title>\\n        </ion-card-header>\\n      <ion-item>\\n        <ion-label for=\\\"pos-name\\\" position=\\\"floating\\\">Название</ion-label>\\n        <ion-input id=\\\"pos-name\\\" type=\\\"text\\\" formControlName=\\\"name\\\"\\n        [ngClass]=\\\"{'invalid': form.get('name').invalid && form.get('name').touched}\\\"></ion-input>\\n        <span class=\\\"helper-text red-text\\\" \\n        *ngIf=\\\"form.get('name').invalid && form.get('name').touched\\\">\\n            Название не должно быть пустым</span>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Цена</ion-label>\\n        <ion-input id=\\\"pos-cost\\\" type=\\\"number\\\" min=\\\"1\\\" [ngClass]=\\\"{'invalid': form.get('cost').invalid && form.get('cost').touched}\\\" formControlName=\\\"cost\\\"></ion-input>\\n        <span class=\\\"helper-text red-text\\\" \\n        *ngIf=\\\"form.get('cost').invalid && form.get('cost').touched\\\">\\n            Введите корректную цену. Минимальное значение 1</span>\\n      </ion-item>\\n      <!-- <button type=\\\"button\\\" class=\\\"modal-action waves-effect waves-black btn-flat\\\" \\n      (click)=\\\"onCancel()\\\">Отмена</button> -->\\n      <ion-button type=\\\"submit\\\" [disabled]=\\\"form.invalid || form.disabled\\\" class=\\\"ion-margin\\\">\\n          Сохранить</ion-button>\\n  </form>\\n</ion-card>\\n    \\n    <ion-card class=\\\"page-subtitle\\\">\\n      <ion-card-header>\\n        <ion-card-title>Позиции</ion-card-title>\\n        <!-- <ion-button class=\\\"waves-effect waves-light btn grey darken-1 btn-small\\\"\\n        (click)=\\\"onAddPosition()\\\"\\n        >\\n          Добавить позицию\\n        </ion-button> -->\\n      </ion-card-header>\\n      <ion-card-content>\\n        <div *ngIf=\\\"!loading; else loader\\\">\\n          <ion-list class=\\\"collection\\\" *ngIf=\\\"positions.length!==0; else empty\\\">\\n            <ion-item class=\\\"collection-item collection-item-icon\\\" *ngFor=\\\"let position of positions\\\" (click)=\\\"onSelectPosition(position)\\\">\\n              <ion-label>\\n                {{position.name}} <strong>{{position.cost}} руб.</strong>\\n              </ion-label>\\n              <ion-icon slot=\\\"end\\\" name=\\\"close-outline\\\" (click)=\\\"onDeletePosition($event, position)\\\"></ion-icon>\\n            </ion-item>\\n          </ion-list>\\n        </div>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ng-template #empty>\\n        <div class=\\\"center\\\">В категории позиций нет</div>\\n    </ng-template>\\n    <ng-template #loader>\\n        Loading\\n    </ng-template>\\n\\n\\n\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoryPage } from './category.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CategoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CategoryPageRoutingModule } from './category-routing.module';\n\nimport { CategoryPage } from './category.page';\nimport { PositonsComponent } from './positons/positons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CategoryPageRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [CategoryPage, PositonsComponent]\n})\nexport class CategoryPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcnkvY2F0ZWdvcnkucGFnZS5zY3NzIn0= */\";","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Category } from 'src/app/shared/interfaces';\nimport { CategoriesService } from 'src/app/shared/services/categories.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.page.html',\n  styleUrls: ['./category.page.scss'],\n})\nexport class CategoryPage implements OnInit {\n  @ViewChild('input', { static: false }) inputRef: ElementRef\n\n  isNew = true\n  form: FormGroup;\n  category: Category;\n  image: File\n  imagePreview=''\n  \n\n\n\n  constructor(private route: ActivatedRoute,\n    private categoriesService: CategoriesService,\n    private router: Router) { }\n\n\n  ngOnInit() {\n\n    this.form = new FormGroup({\n      name: new FormControl(null, Validators.required)\n    });\n\n    this.form.disable()\n\n    this.route.params\n      .pipe(\n        switchMap(\n          (params: Params) => {\n            if (params['id']) {\n              this.isNew = false\n              return this.categoriesService.getById(params['id'])\n            }\n\n            return of(null)\n          }\n        )\n      )\n      .subscribe(\n        (category: Category) => {\n          if (category) {\n            this.category = category\n            this.form.patchValue({\n              name: category.name\n            })\n            this.imagePreview = category.imageSrc\n            console.log(this.imagePreview +\"prev\")\n            console.log(this.category.imageSrc + 'src')\n          }\n          this.form.enable()\n        },\n        error =>console.log(error.error.message)\n      )\n  }\n\n\n  triggerClick() {\n    this.inputRef.nativeElement.click()\n  }\n\n  onFileUpload(event: any) {\n    const file = event.target.files[0]\n    this.image = file\n\n    const reader = new FileReader()\n    reader.onload = () => {\n      this.imagePreview = reader.result as string\n    }\n    reader.readAsDataURL(file)\n  }\n\n  deleteCategory() {\n    const desigion = window.confirm(`Вы уверены, что хотите удалить категорию ${this.category.name}`)\n    if (desigion) {\n      this.categoriesService.delete(this.category._id).subscribe(\n        response => { console.log(response.message) },\n        error => { console.log(error.error.message) },\n        () => this.router.navigate(['/categories'])\n      )\n    }\n  }\n\n  onSubmit() {\n    let obs$\n   console.log(this.image)\n    this.form.disable()\n    if (this.isNew) {\n      //create\n      obs$ = this.categoriesService.create(this.form.value.name, this.image)\n   \n    } else {\n      obs$ = this.categoriesService.update(this.category._id, this.form.value.name, this.image)\n    }\n\n    obs$.subscribe(\n      category => {\n        this.category = category\n        console.log('Изменения сохранены')\n        this.form.enable()\n      },\n      error => {\n        console.log(error.error.message)\n        this.form.enable()\n      }\n    )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcnkvcG9zaXRvbnMvcG9zaXRvbnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { PositionService } from './../../../shared/services/positions.service';\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Position } from 'src/app/shared/interfaces';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-positons',\n  templateUrl: './positons.component.html',\n  styleUrls: ['./positons.component.scss']\n})\nexport class PositonsComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @Input('categoryId') categoryId: string\n  @ViewChild('modal', { static: false }) modalRef: ElementRef\n\n  positions: Position[] = []\n  loading = false\n  form: FormGroup\n  positonId = null\n\n  constructor(private positionService: PositionService) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.positionService.fetch(this.categoryId).subscribe(\n      positions => {\n        this.positions = positions\n        this.loading = false\n      }\n    )\n\n    this.form = new FormGroup({\n      name: new FormControl('', Validators.required),\n      cost: new FormControl(1, [Validators.required, Validators.min(1)])\n    })\n  }\n\n  ngOnDestroy() {\n    \n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  onSelectPosition(position: Position) {\n    this.positonId = position._id\n    this.form.patchValue({\n      name: position.name,\n      cost: position.cost\n    })\n  }\n\n  onAddPosition() {\n    this.positonId = null\n    this.form.reset({\n      name: null,\n      cost: 1\n    })\n  }\n\n\n  onCancel() {\n  }\n\n  onSubmit() {\n    this.form.disable()\n\n    const newPosition: Position = {\n      name: this.form.value.name,\n      cost: this.form.value.cost,\n      category: this.categoryId\n    }\n\n    const complited = () => {\n      this.form.reset({ name: '', cost: 1 })\n      this.form.enable()\n    }\n\n    if (this.positonId) {\n      newPosition._id = this.positonId\n      this.positionService.update(newPosition).subscribe(\n        pos => {\n          const ind = this.positions.findIndex(p => p._id === pos._id)\n          this.positions[ind] = pos\n        },\n        error => {\n        },\n        () => { complited() }\n      )\n    }\n\n    else {\n      this.positionService.create(newPosition).subscribe(\n        pos => {\n          this.positions.push(pos)\n        },\n        error => {\n        },\n        () => { complited() }\n      )\n    }\n\n  }\n\n  onDeletePosition(event:Event, position: Position) {\n    event.stopPropagation()\n    this.positionService.delete(position).subscribe(\n      response => {\n        const indx = this.positions.findIndex(p => p._id === position._id)\n        this.positions.splice(indx, 1)\n      }\n    )\n  }\n\n\n}\n","import { Message,  } from './../interfaces';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Position} from '../interfaces';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PositionService {\r\n\r\n    basea = 'https://salty-cove-68792.herokuapp.com'\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    fetch(categoryId: string): Observable<Position[]> {\r\n        return this.http.get<Position[]>(this.basea + `/api/position/${categoryId}`);\r\n    }\r\n\r\n    create(position:Position):Observable<Position> {\r\n        return this.http.post<Position>(this.basea + '/api/position', position)\r\n    }\r\n\r\n    update(position:Position):Observable<Position> {\r\n        return this.http.patch<Position>(this.basea + `/api/position/${position._id}`, position)\r\n    }\r\n    \r\n    delete(position:Position):Observable<Message>{\r\n        return this.http.delete<Message>(this.basea + `/api/position/${position._id}`)\r\n    }\r\n}"]}