{"version":3,"sources":["webpack:///src/app/categories/categories.page.html","webpack:///src/app/categories/categories-routing.module.ts","webpack:///src/app/categories/categories.module.ts","webpack:///src/app/categories/categories.page.scss","webpack:///src/app/categories/categories.page.ts","webpack:///src/app/shared/services/categories.service.ts"],"names":["routes","path","component","children","loadChildren","then","m","CategoryPageModule","pathMatch","NewcatPageModule","CategoriesPageRoutingModule","imports","forChild","exports","CategoriesPageModule","declarations","CategoriesPage","categoriesService","categories$","fetch","selector","template","CategoriesService","http","basea","get","id","name","image","fd","FormData","append","post","patch","providedIn"],"mappings":"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","file":"categories-categories-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-item>\\n      <ion-menu-button></ion-menu-button>\\n      <ion-title>Ассортимент</ion-title>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-button routerLink=\\\"new\\\" routerLinkActive=\\\"router-link-active\\\" class=\\\"ion-margin\\\" expand=\\\"block\\\">Добавить категорию</ion-button>\\n  <div class=\\\"row\\\" *ngIf=\\\"categories$ | async as categories; else loader\\\">\\n      <div class=\\\"collection\\\" *ngIf=\\\"categories.length!==0; else empty\\\" >\\n        <ion-item [routerLink]=\\\"[category._id]\\\" routerLinkActive=\\\"router-link-active\\\"  class=\\\"collection-item\\\" *ngFor=\\\"let category of categories\\\">\\n          {{category.name}}\\n        </ion-item>\\n      </div>\\n  </div>\\n</ion-content>\\n\\n\\n\\n<ng-template #loader>\\n  Loading\\n</ng-template>\\n\\n<ng-template #empty>\\n    <div class=\\\"center\\\"> У вас нет ни одной категори</div>\\n</ng-template>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoriesPage } from './categories.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoriesPage,\n    children: [\n      {\n        path: '/cat',\n        loadChildren: () => import('./category/category.module').then( m => m.CategoryPageModule)\n      }\n    ],\n   \n  },\n  {\n    path: ':id',\n    loadChildren: () => import('./category/category.module').then( m => m.CategoryPageModule)\n  },\n  {\n    path: '/new',\n    pathMatch: 'full',\n    loadChildren: () => import('./newcat/newcat.module').then( m => m.NewcatPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CategoriesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CategoriesPageRoutingModule } from './categories-routing.module';\n\nimport { CategoriesPage } from './categories.page';\nimport { PositonsComponent } from './category/positons/positons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CategoriesPageRoutingModule\n  ],\n  declarations: [CategoriesPage]\n})\nexport class CategoriesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Category } from '../shared/interfaces';\nimport { CategoriesService } from '../shared/services/categories.service';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.page.html',\n  styleUrls: ['./categories.page.scss'],\n})\nexport class CategoriesPage implements OnInit {\n\n  categories$: Observable<Category[]>\n\n  constructor(private categoriesService: CategoriesService) { }\n\n  ngOnInit() {\n\n    this.categories$ = this.categoriesService.fetch()\n  }\n}\n","\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Category, Message } from '../interfaces';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CategoriesService {\r\n\r\n    basea = 'https://salty-cove-68792.herokuapp.com'\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    fetch(): Observable<Category[]> {\r\n        return this.http.get<Category[]>(this.basea + '/api/category')\r\n    }\r\n\r\n    getById(id: string): Observable<Category> {\r\n        return this.http.get<Category>(this.basea + `/api/category/${id}`)\r\n    }\r\n\r\n    create(name: string, image?: File): Observable<Category> {\r\n        const fd = new FormData()\r\n\r\n        if (image) {\r\n            fd.append('image', image, image.name)\r\n        }\r\n        fd.append('name', name)\r\n\r\n        return this.http.post<Category>(this.basea + '/api/category', fd)\r\n\r\n\r\n    }\r\n\r\n    update(id: string, name: string, image?: File): Observable<Category> {\r\n        const fd = new FormData()\r\n\r\n        if (image) {\r\n            fd.append('image', image, image.name)\r\n        }\r\n        fd.append('name', name)\r\n\r\n        return this.http.patch<Category>(this.basea + `/api/category/${id}`, fd)\r\n\r\n    }\r\n\r\n    delete(id: string): Observable<Message> {\r\n        return this.http.delete<Message>(this.basea + `/api/category/${id}`)\r\n    }\r\n}"]}