{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>login</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <form\\r\\n      class=\\\"card\\\"\\r\\n      [formGroup]=\\\"form\\\"\\r\\n      (ngSubmit)=\\\"onSubmit()\\\"\\r\\n    >\\r\\n    <div class=\\\"card-content\\\">\\r\\n      <ion-card-header>\\r\\n        <ion-card-subtitle>CRM</ion-card-subtitle>\\r\\n        <ion-card-title>Вход в систему</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <div class=\\\"input-field\\\">\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">E-mail</ion-label>\\r\\n          <ion-input\\r\\n            formControlName=\\\"email\\\"\\r\\n            id=\\\"email\\\"\\r\\n            type=\\\"email\\\">\\r\\n          </ion-input>\\r\\n        </ion-item>\\r\\n        <span\\r\\n          class=\\\"helper-text red-text\\\"\\r\\n          *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\"\\r\\n        >\\r\\n          <span *ngIf=\\\"form.get('email').errors['required']\\\">Email не должен быть пустым</span>\\r\\n          <span *ngIf=\\\"form.get('email').errors['email']\\\">Введите корректный email адрес</span>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"input-field\\\">\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Пароль</ion-label>\\r\\n          <ion-input\\r\\n            formControlName=\\\"password\\\"\\r\\n            type=\\\"password\\\">\\r\\n          </ion-input>\\r\\n        </ion-item>\\r\\n        <span\\r\\n          class=\\\"helper-text red-text\\\"\\r\\n          *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\"\\r\\n        >\\r\\n          <span *ngIf=\\\"form.get('password').errors['required']\\\">Пароль не должен быть пустым</span>\\r\\n          <span *ngIf=\\\"form.get('password').errors['minlength'] && form.get('password').errors['minlength']['requiredLength']\\\">\\r\\n            Пароль должен быть больше {{form.get('password').errors['minlength']['requiredLength']}} символов.\\r\\n            Сейчас {{form.get('password').errors['minlength']['actualLength']}}\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-action\\\">\\r\\n      <ion-button\\r\\n        type=\\\"submit\\\"\\r\\n        class=\\\"ion-margin\\\"\\r\\n        [disabled]=\\\"form.invalid || form.disabled\\\"\\r\\n      >\\r\\n        Войти\\r\\n      </ion-button>\\r\\n    </div>\\r\\n  </form>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { MaterialService } from '../shared/classes/material.service';\r\nimport { AuthService } from '../shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  form: FormGroup\r\n  aSub: Subscription\r\n\r\n  constructor(private auth: AuthService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              public alertController: AlertController) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)])\r\n    })\r\n\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (params['registered']) {\r\n        console.log('Теперь вы можете зайти в систему используя свои данные')\r\n      } else if (params['accessDenied']) {\r\n        console.log('Для начала авторизуйтесь в системе')\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.aSub) {\r\n      this.aSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.form.disable()\r\n\r\n    this.aSub = this.auth.login(this.form.value).subscribe(\r\n      () => this.router.navigate(['/dash/history']),\r\n      error => {\r\n        this.presentAlert()\r\n        this.form.enable()\r\n      }\r\n    )\r\n  }\r\n\r\n  async presentAlert() {\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Ошибка',\r\n      subHeader: '',\r\n      message: 'Неверный логин или пароль.',\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}