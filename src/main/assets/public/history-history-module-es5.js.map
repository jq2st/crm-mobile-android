{"version":3,"sources":["webpack:///src/app/history/history.page.html","webpack:///src/app/history/history-routing.module.ts","webpack:///src/app/history/history.module.ts","webpack:///src/app/history/history.page.scss","webpack:///src/app/history/history.page.ts","webpack:///src/app/shared/services/orders.service.ts"],"names":["routes","path","component","HistoryPageRoutingModule","imports","forChild","exports","HistoryPageModule","providers","provide","multi","useClass","declarations","HistoryPage","ordersService","STEP","isFilterVisible","offset","limit","orders","loading","reloading","noMoreOrders","fetch","oSub","subscribe","concat","length","unsubscribe","filter","selector","template","OrdersService","http","basea","order","post","params","get","fromObject","providedIn"],"mappings":"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","file":"history-history-module-es5.js","sourcesContent":["export default \"\\r\\n<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-item>\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n      <ion-title>История заказов</ion-title>\\r\\n    </ion-item>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-item *ngFor=\\\"let order of orders\\\">\\r\\n    {{order.date}}\\r\\n  </ion-item>\\r\\n\\r\\n  <!-- <div class=\\\"page-title\\\">\\r\\n    <button (click)=\\\"isFilterVisible=!isFilterVisible\\\" class=\\\"btn btn-small\\\" [ngClass]=\\\"{'active': isFilterVisible, \\r\\n  'red':isFiltered()}\\\"\\r\\n      data-tooltip=\\\"Открыть фильтр\\\" data-position=\\\"left\\\" #tooltip>\\r\\n      <i class=\\\"material-icons\\\">filter_list</i>\\r\\n    </button>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <app-history-filter (onFilter)=\\\"applyFilter($event)\\\" *ngIf=\\\"isFilterVisible\\\"></app-history-filter>\\r\\n-->\\r\\n  <!-- <div *ngIf=\\\"!reloading; else reloadingBlock\\\">\\r\\n    <div *ngIf=\\\"orders.length!==0; else empty\\\">\\r\\n      <table class=\\\"highlight mb2\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th>№</th>\\r\\n            <th>Дата</th>\\r\\n            <th>Время</th>\\r\\n            <th>Сумма</th>\\r\\n            <th></th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n    \\r\\n        <tbody>\\r\\n        \\r\\n        <tr *ngFor=\\\"let order of orders\\\">\\r\\n            <td>{{order.order}}</td>\\r\\n            <td>{{order.date | date: 'dd.MM.yyyy'}}</td>\\r\\n            <td>{{order.date | date:'HH:mm'}}</td>\\r\\n            <td>{{computePrice(order)}} руб.</td>\\r\\n            <td>\\r\\n                <button (click)='selectOrder(order)' class=\\\"btn btn-small grey darken-1\\\"><i class=\\\"material-icons\\\">open_in_new</i></button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n    <div id=\\\"order-list\\\" class=\\\"modal modal-fixed-footer\\\" #modal>\\r\\n        <div class=\\\"modal-content\\\" *ngIf=\\\"selectedOrder\\\">\\r\\n            <h4 class=\\\"mb1\\\">Заказ №{{selectedOrder.order}}</h4>\\r\\n            <table class=\\\"highlight\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th>Название</th>\\r\\n                    <th>Количество</th>\\r\\n                    <th>Цена</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n    \\r\\n                <tbody>\\r\\n                <tr  *ngFor=\\\"let item of selectedOrder.list\\\">\\r\\n                    <td>{{item.name}}</td>\\r\\n                    <td>{{item.quantity}}</td>\\r\\n                    <td>{{item.cost}}</td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"order-summary\\\">\\r\\n                <p>Общая стоимость <strong>{{computePrice(selectedOrder)}} руб.</strong></p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button (click)=\\\"closeModal()\\\" class=\\\"modal-action waves-effect waves-black btn-flat\\\">Закрыть</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    \\r\\n    <div class=\\\"center mb2\\\" *ngIf=\\\"!noMoreOrders\\\">\\r\\n      <button class=\\\"btn waves-effect grey darken-1 btn-small\\\" (click)=\\\"loadMore()\\\"\\r\\n        *ngIf=\\\"!loading; else loader\\\">Загрузить еще</button> -->\\r\\n      <ng-template #loader>\\r\\n        <!-- loader -->\\r\\n      </ng-template>\\r\\n  \\r\\n    <!-- </div>\\r\\n  </div> \\r\\n   -->\\r\\n  <ng-template #empty>\\r\\n    <div class=\\\"center\\\">У вас пока нет заказов</div>\\r\\n  </ng-template>\\r\\n  \\r\\n  <!-- </div> -->\\r\\n  \\r\\n  <ng-template #reloadingBlock>\\r\\n    <!-- loader -->\\r\\n  </ng-template>\\r\\n  \\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HistoryPage } from './history.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HistoryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HistoryPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HistoryPageRoutingModule } from './history-routing.module';\r\n\r\nimport { HistoryPage } from './history.page';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptor } from '../shared/classes/token.interceptor';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    HistoryPageRoutingModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      multi: true,\r\n      useClass: TokenInterceptor\r\n    }\r\n  ],\r\n  declarations: [HistoryPage,]\r\n})\r\nexport class HistoryPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hpc3RvcnkvaGlzdG9yeS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { OrdersService } from '../shared/services/orders.service';\r\n\r\n@Component({\r\n  selector: 'app-history',\r\n  templateUrl: './history.page.html',\r\n  styleUrls: ['./history.page.scss'],\r\n})\r\nexport class HistoryPage implements OnInit {\r\n\r\n  // @ViewChild('tooltip', { static: false }) tooltipRef: ElementRef\r\n\r\n  STEP = 15\r\n\r\n  // tooltip: MaterialInstance\r\n  isFilterVisible = false\r\n\r\n  offset = 0\r\n  limit = 2\r\n\r\n  oSub: Subscription\r\n  orders = []\r\n\r\n  loading = false\r\n  reloading = false\r\n\r\n  noMoreOrders = false\r\n\r\n  // filter: Filter = {}\r\n\r\n\r\n\r\n  constructor(private ordersService: OrdersService) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.reloading = true\r\n    this.fetch()\r\n  }\r\n\r\n  private fetch() {\r\n\r\n    // const params = Object.assign({}, this.filter, {\r\n    //   offset: this.offset,\r\n    //   limit: this.STEP\r\n    // })\r\n\r\n    this.oSub = this.ordersService.fetch().subscribe(\r\n      orders => {\r\n        this.orders = this.orders.concat(orders)\r\n        this.noMoreOrders = orders.length < this.STEP\r\n        this.loading = false\r\n        this.reloading = false\r\n      }\r\n    )\r\n  }\r\n\r\n  loadMore() {\r\n    this.offset += this.STEP;\r\n    this.loading = true\r\n    this.fetch()\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.tooltip.destroy()\r\n    this.oSub.unsubscribe()\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.tooltip = MaterialService.initTooltip(this.tooltipRef)\r\n  }\r\n\r\n  applyFilter(filter) {\r\n    this.orders = []\r\n    this.offset = 0\r\n    // this.filter = filter\r\n    this.reloading = true\r\n    this.fetch()\r\n\r\n  }\r\n\r\n  isFiltered() {\r\n    // return Object.keys(this.filter).length !== 0\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n// import { Order } from '../interfaces';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n\r\n    basea = 'https://salty-cove-68792.herokuapp.com'\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    create(order: any): Observable<any> {\r\n        return this.http.post<any>(this.basea + '/api/order', order)\r\n    }\r\n\r\n    fetch(params: any = {}): Observable<any[]> {\r\n        return this.http.get<any[]>(this.basea + '/api/order', {\r\n            params:new HttpParams({\r\n                fromObject:params\r\n            })\r\n        })\r\n    }\r\n}"]}