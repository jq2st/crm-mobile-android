{"version":3,"sources":["./src/app/categories/category/category.page.html","./src/app/categories/category/positons/positons.component.html","./src/app/categories/category/category-routing.module.ts","./src/app/categories/category/category.module.ts","./src/app/categories/category/category.page.scss","./src/app/categories/category/category.page.ts","./src/app/categories/category/positons/positons.component.scss","./src/app/categories/category/positons/positons.component.ts","./src/app/shared/services/positions.service.ts"],"names":[],"mappings":"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","file":"category-category-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-item>\\n      <ion-back-button></ion-back-button>\\n      <ion-title *ngIf=\\\"category\\\">{{category.name}}</ion-title>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"row\\\">\\n    <form class=\\\"col s12 l6\\\" [formGroup]=\\\"form\\\" (ngSubmit)='onSubmit()'>\\n      <div class=\\\"input-field\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Название</ion-label>\\n          <ion-input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{'invalid': form.get('name').invalid && form.get('name').touched}\\\"></ion-input>\\n        </ion-item>\\n        <span class=\\\"helper-text red-text\\\" *ngIf=\\\"form.get('name').invalid && form.get('name').touched\\\">\\n            <span *ngIf=\\\"form.get('name').hasError('required')\\\">Имя категории не может быть пустым</span>\\n        </span>\\n      </div>\\n  \\n      <!-- <div>\\n        <input type=\\\"file\\\" class=\\\"display-none\\\" #input (change)=\\\"onFileUpload($event)\\\">\\n        <button (click)=\\\"triggerClick()\\\" [disabled]=\\\"form.disabled\\\" class=\\\"waves-effect waves-light btn orange lighten-2 mb2\\\" type=\\\"button\\\">\\n          <i class=\\\"material-icons left\\\">backup</i>\\n          Загрузить изображение\\n        </button>\\n      </div> -->\\n      <div class=\\\"ion-margin\\\">\\n        <ion-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]='form.invalid || form.disabled'>\\n          <ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n          Сохранить изменения\\n        </ion-button>\\n        <ion-button color=\\\"danger\\\" (click)=\\\"deleteCategory()\\\" *ngIf=\\\"!isNew\\\">\\n          <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\n          Удалить\\n        </ion-button>\\n      </div>\\n  </form>\\n  \\n    <!-- <div class=\\\"col s12 l4 center\\\">\\n      <img class=\\\"responsive-img h200\\\" [src]='imagePreview' *ngIf=\\\"imagePreview\\\">\\n    </div> -->\\n  </div>\\n  \\n  <app-positons *ngIf=\\\"category?._id\\\" [categoryId]='category._id'></app-positons>\\n</ion-content>\\n\\n\\n  <!-- <div class=\\\"page-title\\\">\\n    <h4>\\n      <a [routerLink]=\\\"['/categories']\\\">Категории</a>\\n      <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\n      {{isNew ? 'Добавить': 'Редактировать'}} категорию\\n    </h4>\\n    <span>\\n     \\n    </span>\\n  </div> -->\\n\\n\\n\";","export default \"\\n    <ion-card class=\\\"modal\\\" #modal>\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)='onSubmit()'>\\n        <ion-card-header>\\n          <ion-card-title>Позиция</ion-card-title>\\n        </ion-card-header>\\n      <ion-item>\\n        <ion-label for=\\\"pos-name\\\" position=\\\"floating\\\">Название</ion-label>\\n        <ion-input id=\\\"pos-name\\\" type=\\\"text\\\" formControlName=\\\"name\\\"\\n        [ngClass]=\\\"{'invalid': form.get('name').invalid && form.get('name').touched}\\\"></ion-input>\\n        <span class=\\\"helper-text red-text\\\" \\n        *ngIf=\\\"form.get('name').invalid && form.get('name').touched\\\">\\n            Название не должно быть пустым</span>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Цена</ion-label>\\n        <ion-input id=\\\"pos-cost\\\" type=\\\"number\\\" min=\\\"1\\\" [ngClass]=\\\"{'invalid': form.get('cost').invalid && form.get('cost').touched}\\\" formControlName=\\\"cost\\\"></ion-input>\\n        <span class=\\\"helper-text red-text\\\" \\n        *ngIf=\\\"form.get('cost').invalid && form.get('cost').touched\\\">\\n            Введите корректную цену. Минимальное значение 1</span>\\n      </ion-item>\\n      <!-- <button type=\\\"button\\\" class=\\\"modal-action waves-effect waves-black btn-flat\\\" \\n      (click)=\\\"onCancel()\\\">Отмена</button> -->\\n      <ion-button type=\\\"submit\\\" [disabled]=\\\"form.invalid || form.disabled\\\" class=\\\"ion-margin\\\">\\n          Сохранить</ion-button>\\n  </form>\\n</ion-card>\\n    \\n    <ion-card class=\\\"page-subtitle\\\">\\n      <ion-card-header>\\n        <ion-card-title>Позиции</ion-card-title>\\n        <!-- <ion-button class=\\\"waves-effect waves-light btn grey darken-1 btn-small\\\"\\n        (click)=\\\"onAddPosition()\\\"\\n        >\\n          Добавить позицию\\n        </ion-button> -->\\n      </ion-card-header>\\n      <ion-card-content>\\n        <div *ngIf=\\\"!loading; else loader\\\">\\n          <ion-list class=\\\"collection\\\" *ngIf=\\\"positions.length!==0; else empty\\\">\\n            <ion-item class=\\\"collection-item collection-item-icon\\\" *ngFor=\\\"let position of positions\\\" (click)=\\\"onSelectPosition(position)\\\">\\n              <ion-label>\\n                {{position.name}} <strong>{{position.cost}} руб.</strong>\\n              </ion-label>\\n              <ion-icon slot=\\\"end\\\" name=\\\"close-outline\\\" (click)=\\\"onDeletePosition($event, position)\\\"></ion-icon>\\n            </ion-item>\\n          </ion-list>\\n        </div>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ng-template #empty>\\n        <div class=\\\"center\\\">В категории позиций нет</div>\\n    </ng-template>\\n    <ng-template #loader>\\n        Loading\\n    </ng-template>\\n\\n\\n\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoryPage } from './category.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CategoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CategoryPageRoutingModule } from './category-routing.module';\n\nimport { CategoryPage } from './category.page';\nimport { PositonsComponent } from './positons/positons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CategoryPageRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [CategoryPage, PositonsComponent]\n})\nexport class CategoryPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcnkvY2F0ZWdvcnkucGFnZS5zY3NzIn0= */\";","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Category } from 'src/app/shared/interfaces';\nimport { CategoriesService } from 'src/app/shared/services/categories.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.page.html',\n  styleUrls: ['./category.page.scss'],\n})\nexport class CategoryPage implements OnInit {\n  @ViewChild('input', { static: false }) inputRef: ElementRef\n\n  isNew = true\n  form: FormGroup;\n  category: Category;\n  image: File\n  imagePreview=''\n  \n\n\n\n  constructor(private route: ActivatedRoute,\n    private categoriesService: CategoriesService,\n    private router: Router) { }\n\n\n  ngOnInit() {\n\n    this.form = new FormGroup({\n      name: new FormControl(null, Validators.required)\n    });\n\n    this.form.disable()\n\n    this.route.params\n      .pipe(\n        switchMap(\n          (params: Params) => {\n            if (params['id']) {\n              this.isNew = false\n              return this.categoriesService.getById(params['id'])\n            }\n\n            return of(null)\n          }\n        )\n      )\n      .subscribe(\n        (category: Category) => {\n          if (category) {\n            this.category = category\n            this.form.patchValue({\n              name: category.name\n            })\n            this.imagePreview = category.imageSrc\n            console.log(this.imagePreview +\"prev\")\n            console.log(this.category.imageSrc + 'src')\n          }\n          this.form.enable()\n        },\n        error =>console.log(error.error.message)\n      )\n  }\n\n\n  triggerClick() {\n    this.inputRef.nativeElement.click()\n  }\n\n  onFileUpload(event: any) {\n    const file = event.target.files[0]\n    this.image = file\n\n    const reader = new FileReader()\n    reader.onload = () => {\n      this.imagePreview = reader.result as string\n    }\n    reader.readAsDataURL(file)\n  }\n\n  deleteCategory() {\n    const desigion = window.confirm(`Вы уверены, что хотите удалить категорию ${this.category.name}`)\n    if (desigion) {\n      this.categoriesService.delete(this.category._id).subscribe(\n        response => { console.log(response.message) },\n        error => { console.log(error.error.message) },\n        () => this.router.navigate(['/categories'])\n      )\n    }\n  }\n\n  onSubmit() {\n    let obs$\n   console.log(this.image)\n    this.form.disable()\n    if (this.isNew) {\n      //create\n      obs$ = this.categoriesService.create(this.form.value.name, this.image)\n   \n    } else {\n      obs$ = this.categoriesService.update(this.category._id, this.form.value.name, this.image)\n    }\n\n    obs$.subscribe(\n      category => {\n        this.category = category\n        console.log('Изменения сохранены')\n        this.form.enable()\n      },\n      error => {\n        console.log(error.error.message)\n        this.form.enable()\n      }\n    )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcnkvcG9zaXRvbnMvcG9zaXRvbnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { PositionService } from './../../../shared/services/positions.service';\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Position } from 'src/app/shared/interfaces';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-positons',\n  templateUrl: './positons.component.html',\n  styleUrls: ['./positons.component.scss']\n})\nexport class PositonsComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @Input('categoryId') categoryId: string\n  @ViewChild('modal', { static: false }) modalRef: ElementRef\n\n  positions: Position[] = []\n  loading = false\n  form: FormGroup\n  positonId = null\n\n  constructor(private positionService: PositionService) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.positionService.fetch(this.categoryId).subscribe(\n      positions => {\n        this.positions = positions\n        this.loading = false\n      }\n    )\n\n    this.form = new FormGroup({\n      name: new FormControl('', Validators.required),\n      cost: new FormControl(1, [Validators.required, Validators.min(1)])\n    })\n  }\n\n  ngOnDestroy() {\n    \n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  onSelectPosition(position: Position) {\n    this.positonId = position._id\n    this.form.patchValue({\n      name: position.name,\n      cost: position.cost\n    })\n  }\n\n  onAddPosition() {\n    this.positonId = null\n    this.form.reset({\n      name: null,\n      cost: 1\n    })\n  }\n\n\n  onCancel() {\n  }\n\n  onSubmit() {\n    this.form.disable()\n\n    const newPosition: Position = {\n      name: this.form.value.name,\n      cost: this.form.value.cost,\n      category: this.categoryId\n    }\n\n    const complited = () => {\n      this.form.reset({ name: '', cost: 1 })\n      this.form.enable()\n    }\n\n    if (this.positonId) {\n      newPosition._id = this.positonId\n      this.positionService.update(newPosition).subscribe(\n        pos => {\n          const ind = this.positions.findIndex(p => p._id === pos._id)\n          this.positions[ind] = pos\n        },\n        error => {\n        },\n        () => { complited() }\n      )\n    }\n\n    else {\n      this.positionService.create(newPosition).subscribe(\n        pos => {\n          this.positions.push(pos)\n        },\n        error => {\n        },\n        () => { complited() }\n      )\n    }\n\n  }\n\n  onDeletePosition(event:Event, position: Position) {\n    event.stopPropagation()\n    this.positionService.delete(position).subscribe(\n      response => {\n        const indx = this.positions.findIndex(p => p._id === position._id)\n        this.positions.splice(indx, 1)\n      }\n    )\n  }\n\n\n}\n","import { Message,  } from './../interfaces';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Position} from '../interfaces';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PositionService {\r\n\r\n    basea = 'https://salty-cove-68792.herokuapp.com'\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    fetch(categoryId: string): Observable<Position[]> {\r\n        return this.http.get<Position[]>(this.basea + `/api/position/${categoryId}`);\r\n    }\r\n\r\n    create(position:Position):Observable<Position> {\r\n        return this.http.post<Position>(this.basea + '/api/position', position)\r\n    }\r\n\r\n    update(position:Position):Observable<Position> {\r\n        return this.http.patch<Position>(this.basea + `/api/position/${position._id}`, position)\r\n    }\r\n    \r\n    delete(position:Position):Observable<Message>{\r\n        return this.http.delete<Message>(this.basea + `/api/position/${position._id}`)\r\n    }\r\n}"],"sourceRoot":"webpack:///"}